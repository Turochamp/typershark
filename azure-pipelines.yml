trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: typershark
- name: buildConfiguration
  value: 'Release'
- name: isMain
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  

stages:
- stage: Build
  jobs:
  - job:
    displayName: Build and test
    steps:
    - task: DotNetCoreInstaller@1
      displayName: Use .NET core for Sonar Cloud
      inputs:
        packageType: 'sdk'
        version: '2.2.x'
        includePreviewVersions: true

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'turochamp'
        scannerMode: 'MSBuild'
        projectKey: 'Turochamp_typershark'
        projectName: 'Typershark'
        projectVersion: '$(Build.BuildNumber)'
        extraProperties: |
          sonar.verbose=false
          sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/TestResults/Coverage/coverage.opencover.xml

    - task: UseDotNet@2
      displayName: Use .net 5 for solution
      inputs:
        version: '5.0.x'
        includePreviewVersions: true

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '**/*.sln'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.sln'
        arguments: --no-restore --configuration $(buildConfiguration)

    - task: DotNetCoreCLI@2
      displayName: 'Install ReportGenerator'
      inputs:
        command: custom
        custom: tool
        arguments: 'install --global dotnet-reportgenerator-globaltool'

    - task: DotNetCoreCLI@2
      displayName: Running unit tests
      continueOnError: true
      inputs:
        command: 'test'
        projects: '**/*.UnitTests.csproj'
        testRunTitle: 'Unit tests'
        arguments: '--no-build --configuration $(buildConfiguration) --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage report'
      inputs:
        codeCoverageTool: 'cobertura'
        summaryFileLocation: '$(Build.SourcesDirectory)/TestResults/Coverage/coverage.opencover.xml'

    - task: SonarCloudAnalyze@1
      displayName: Analyze code 

    - task: SonarCloudPublish@1
      displayName: Publish SonarCloud-analysis
      inputs:
        pollingTimeoutSec: '300'
    
    - task: DotNetCoreCLI@2
      displayName: Dotnet publish
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--no-build --configuration $(buildConfiguration) --output app'
        modifyOutputPath: false
    
    - publish: app
      artifact: app
      displayName: Publish application
    
    - publish: deploy
      artifact: deploy
      displayName: Publish IaC

    - publish: tests/DevOpsDemo.AcceptanceTests
      artifact: acceptanceTests
      displayName: Publish acceptance tests